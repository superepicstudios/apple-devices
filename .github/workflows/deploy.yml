name: Deploy

on:
  push:
    tags: '[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  REGISTRY_TYPE: GHCR
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REPO: superepicstudios/apple-devices

jobs:

  env:
    runs-on: ubuntu-latest
    steps:
      - name: Env Output
        run: |
          echo "REPO=${{ env.REPO }}" >> $GITHUB_OUTPUT
          echo "REGISTRY=${{ env.REGISTRY }}" >> $GITHUB_OUTPUT
    outputs:
      REPO: ${{ env.REPO }}
      REGISTRY: ${{ env.REGISTRY }}

  publish-images:
    needs: env
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: api
            image: "${{ needs.env.outputs.REGISTRY }}/${{ needs.env.outputs.REPO }}-api"
            dockerfile: web/apps/api/dockerfile
          - name: frontend
            image: "${{ needs.env.outputs.REGISTRY }}/${{ needs.env.outputs.REPO }}-frontend"
            dockerfile: web/apps/www/dockerfile
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Authenticate
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_TOKEN }}
      - name: Build & Push
        id: push
        uses: docker/build-push-action@v6.5.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ matrix.image }}:latest
            ${{ matrix.image }}:${{ github.ref_name }}
      - name: Digest
        id: digest
        run: |
          NAME="${{ matrix.name }}"
          DIGEST="${{ steps.push.outputs.digest }}"
          echo "$NAME-digest=$DIGEST" >> $GITHUB_OUTPUT
    outputs:
      api-digest: ${{ steps.digest.outputs.api-digest }}
      frontend-digest: ${{ steps.digest.outputs.frontend-digest }}

  deploy:
    needs: publish-images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy
        uses: digitalocean/app_action/deploy@v2
        env:
          API_DIGEST: ${{ needs.publish-images.outputs.api-digest }}
          FRONTEND_DIGEST: ${{ needs.publish-images.outputs.frontend-digest }}
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
          app_spec_location: .do/app.yml
