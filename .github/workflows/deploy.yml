name: Deploy

on:
  push:
    tags: '[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: read
  packages: write

jobs:

  publish-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: api
            image: ghcr.io/superepicstudios/apple-devices-api
            dockerfile: web/apps/api/dockerfile
          - name: frontend
            image: ghcr.io/superepicstudios/apple-devices-frontend
            dockerfile: web/apps/www/dockerfile
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Authenticate
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & Push
        id: push
        uses: docker/build-push-action@v6.5.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ matrix.image }}:latest
            ${{ matrix.image }}:${{ github.ref_name }}
      - name: Digest
        id: digest
        run: |
          name="${{ matrix.name }}"
          digest="${{ steps.push.outputs.digest }}"
          echo "${name}-digest=${digest}" >> "$GITHUB_OUTPUT"
    outputs:
      api-digest: ${{ steps.digest.outputs.api-digest }}
      frontend-digest: ${{ steps.digest.outputs.frontend-digest }}

  deploy:
    needs: publish-images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy
        uses: digitalocean/app_action/deploy@v2
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          API_DIGEST: ${{ needs.publish-images.outputs.api-digest }}
          FRONTEND_DIGEST: ${{ needs.publish-images.outputs.frontend-digest }}
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
          app_spec_location: .do/app.yml
